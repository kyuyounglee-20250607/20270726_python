# -*- coding: utf-8 -*-
"""20250726_print.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z8mCW_itiUqZ5WQ71wB1y8Uzv2ALDE_q

### 1. `print()` 함수의 기본 사용법

`print()` 함수는 괄호 안에 있는 내용을 화면에 출력하는 가장 기본적인 파이썬 함수입니다.
"""

print("안녕하세요!")

"""### 2. 문자열, 숫자, 변수 출력 방법

`print()` 함수는 문자열, 숫자, 그리고 변수에 저장된 값을 출력할 수 있습니다.
"""

# 문자열 출력
print("파이썬 학습 시작!")

# 숫자 출력
print(123)
print(3.14)

# 변수 출력
message = "변수 값 출력하기"
number = 10
pi = 3.14159

print(message)
print(number)
print(pi)

"""### 3. 여러 값을 한 줄에 출력하는 방법 (콤마 사용)

여러 개의 값을 콤마(`,`)로 구분하여 `print()` 함수 안에 넣으면 한 줄에 공백을 두고 출력됩니다.
"""

print("이름:", "김파이", "나이:", 20)

"""### 4. 줄바꿈 없이 출력하는 방법 (`end` 옵션)

`print()` 함수는 기본적으로 출력 후 줄바꿈을 합니다. `end` 옵션을 사용하면 줄바꿈 대신 원하는 문자로 끝을 지정할 수 있습니다. 기본값은 `\n` (줄바꿈 문자) 입니다.
"""

print("줄바꿈 없이", end=" ")
print("출력됩니다.")

print("점", end=".")
print("점", end=".")
print("점")

"""### 5. 출력 값 사이에 구분자 넣는 방법 (`sep` 옵션)

여러 값을 콤마로 구분하여 출력할 때, 값들 사이에 들어가는 구분자를 `sep` 옵션으로 변경할 수 있습니다. 기본값은 공백입니다.
"""

print("사과", "바나나", "오렌지", sep=", ")
print("2023", "10", "26", sep="-")

"""### 6. 문자열 포맷팅 방법들

문자열 안에 변수 값을 삽입하거나 특정 형식으로 출력하고 싶을 때 문자열 포맷팅을 사용합니다. 주요 방법은 다음과 같습니다.

#### `%` 연산자

오래된 방식이지만 여전히 사용됩니다. `%s`는 문자열, `%d`는 정수, `%f`는 실수를 나타냅니다.
"""

name = "김파이"
age = 25
print("제 이름은 {}이고, 나이는 {}살입니다.".format(name, age))

print("제 이름은 {0}이고, 나이는 {1}살입니다.".format(name, age)) # 인덱스 사용

print("파이 값은 {:.2f}입니다.".format(pi)) # 소수점 둘째 자리까지 출력

name = "김파이"
age = 25
print(f"제 이름은 {name}이고, 나이는 {age}살입니다.")

pi = 3.1415926535
print(f"파이 값은 {pi:.2f}입니다.") # 소수점 둘째 자리까지 출력

# % 연산자
name = "김파이"
age = 25
print("제 이름은 %s이고, 나이는 %d살입니다." % (name, age))

pi = 3.1415926535
print("파이 값은 %.2f입니다." % pi)

# str.format() 메서드
print("제 이름은 {}이고, 나이는 {}살입니다.".format(name, age))
print("제 이름은 {0}이고, 나이는 {1}살입니다.".format(name, age))
print("파이 값은 {:.2f}입니다.".format(pi))

# f-string
print(f"제 이름은 {name}이고, 나이는 {age}살입니다.")
print(f"파이 값은 {pi:.2f}입니다.")

"""### 7. 따옴표 안에 따옴표 넣는 방법

문자열을 정의할 때 사용한 따옴표와 동일한 따옴표를 문자열 안에 포함시키려면 이스케이프 문자 `\`를 사용하거나, 외부 따옴표와 다른 종류의 따옴표를 사용하면 됩니다.
"""

# 이스케이프 문자 사용
print("그는 말했다: \"안녕!\"")
print('작은따옴표를 쓰고 싶으면 \' 이렇게')

# 다른 종류의 따옴표 사용
print('그는 말했다: "안녕!"')
print("작은따옴표를 쓰고 싶으면 ' 이렇게")

"""### 8. 이모지나 특수문자 출력

파이썬은 유니코드를 지원하므로 다양한 이모지나 특수문자를 문자열에 직접 포함시켜 출력할 수 있습니다.
"""

print("😊 안녕하세요! ✨")
print("© 2023 파이썬 학습")

"""### 9. 출력 줄 맞춤 (왼쪽, 오른쪽, 가운데 정렬)

문자열 포맷팅을 사용하여 출력되는 문자열의 길이를 지정하고 정렬할 수 있습니다. 주로 `str.format()` 메서드나 f-string에서 사용됩니다.

-   `<`: 왼쪽 정렬
-   `>`: 오른쪽 정렬
-   `^`: 가운데 정렬
"""

text = "Python"
width = 10

print(f"왼쪽 정렬: '{text:<{width}}'")
print(f"오른쪽 정렬: '{text:>{width}}'")
print(f"가운데 정렬: '{text:^{width}}'")

# 채움 문자 지정
print(f"오른쪽 정렬 (채움): '{text:->{width}}'")
print(f"가운데 정렬 (채움): '{text:-^{width}}'")

"""### 10. 유니코드나 한글 출력 시 주의점

파이썬 3부터는 기본적으로 유니코드를 지원하여 한글 출력이 용이합니다. 하지만 파일 인코딩 설정이나 터미널 환경에 따라 문제가 발생할 수 있습니다. Colab 환경에서는 대부분 문제없이 한글 출력이 가능합니다.

만약 인코딩 문제가 발생한다면, 파일 상단에 `# -*- coding: utf-8 -*-` 와 같이 인코딩을 명시하거나, 문자열 앞에 `u` 접두사를 붙여 유니코드 문자열임을 명시하는 방법(Python 2와의 호환성을 위해 사용되기도 함)을 고려해 볼 수 있습니다. 하지만 파이썬 3에서는 기본적으로 UTF-8을 사용하므로 특별한 경우가 아니면 문제가 발생하지 않습니다.
"""

print("파이썬에서 한글을 출력합니다.")

"""---

### 📚 초보자를 위한 print() 함수 실습 문제

이제 배운 내용을 바탕으로 다음 문제들을 풀어보세요.

**문제 1:**

"안녕하세요, 파이썬 세계에 오신 것을 환영합니다!" 라는 문장을 출력하세요.

**문제 2:**

두 변수 `name = "앨리스"`와 `age = 20`를 사용하여 "제 이름은 앨리스이고, 나이는 20살입니다." 라는 문장을 f-string을 사용하여 출력하세요.

**문제 3:**

숫자 10, 20, 30을 콤마(`,`)로 구분하여 한 줄에 출력하세요.

**문제 4:**

"첫 번째 줄"을 출력하고 줄바꿈 없이 "두 번째 줄"을 이어서 출력하세요.

**문제 5:**

변수 `price = 123.45678`을 사용하여 "상품 가격: 123.46 달러" 와 같이 소수점 둘째 자리까지 출력하세요. (f-string 사용)

---

### ✅ 실습 문제 정답

**문제 1 정답:**
"""

name = "앨리스"
age = 20
print(f"제 이름은 {name}이고, 나이는 {age}살입니다.")

print(10, 20, 30, sep=",")
# 또는 print("10,20,30") 도 가능하지만, sep 사용을 연습하는 것이 좋습니다.

print("첫 번째 줄", end="")
print("두 번째 줄")

price = 123.45678
print(f"상품 가격: {price:.2f} 달러")